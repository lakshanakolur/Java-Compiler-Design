Grammar

    0 $accept: supreme_start $end

    1 supreme_start: start supreme_start
    2              | start

    3 start: T_ID '=' T_NUMBER
    4      | T_ID '=' T_ID
    5      | T_ID '=' T_ID opr T_ID
    6      | T_ID '=' T_NUMBER opr T_ID
    7      | T_ID '=' T_ID opr T_NUMBER
    8      | T_ID '=' T_NUMBER opr T_NUMBER
    9      | T_GOTO T_ID
   10      | T_GOTO T_STOP
   11      | T_IF T_ID T_GOTO T_ID
   12      | T_ID ':'
   13      | T_START
   14      | T_STOP
   15      | T_ID '=' T_ID '[' T_ID ']'
   16      | T_ID '[' T_ID ']' '=' T_ID

   17 opr: '+'
   18    | '-'
   19    | '*'
   20    | '/'
   21    | '<'
   22    | '>'
   23    | T_LE_OP
   24    | T_GE_OP
   25    | T_MOD_OP
   26    | T_EQ_OP
   27    | T_NE_OP
   28    | T_OR_OP
   29    | T_AND_OP


Terminals, with rules where they appear

$end (0) 0
'*' (42) 19
'+' (43) 17
'-' (45) 18
'/' (47) 20
':' (58) 12
'<' (60) 21
'=' (61) 3 4 5 6 7 8 15 16
'>' (62) 22
'[' (91) 15 16
']' (93) 15 16
error (256)
T_START (258) 13
T_STOP (259) 10 14
T_ID (260) 3 4 5 6 7 8 9 11 12 15 16
T_NUMBER (261) 3 6 7 8
T_GOTO (262) 9 10 11
T_IF (263) 11
T_LE_OP (264) 23
T_GE_OP (265) 24
T_MOD_OP (266) 25
T_EQ_OP (267) 26
T_NE_OP (268) 27
T_OR_OP (269) 28
T_AND_OP (270) 29


Nonterminals, with rules where they appear

$accept (26)
    on left: 0
supreme_start (27)
    on left: 1 2, on right: 0 1
start (28)
    on left: 3 4 5 6 7 8 9 10 11 12 13 14 15 16, on right: 1 2
opr (29)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29,
    on right: 5 6 7 8


state 0

    0 $accept: . supreme_start $end

    T_START  shift, and go to state 1
    T_STOP   shift, and go to state 2
    T_ID     shift, and go to state 3
    T_GOTO   shift, and go to state 4
    T_IF     shift, and go to state 5

    supreme_start  go to state 6
    start          go to state 7


state 1

   13 start: T_START .

    $default  reduce using rule 13 (start)


state 2

   14 start: T_STOP .

    $default  reduce using rule 14 (start)


state 3

    3 start: T_ID . '=' T_NUMBER
    4      | T_ID . '=' T_ID
    5      | T_ID . '=' T_ID opr T_ID
    6      | T_ID . '=' T_NUMBER opr T_ID
    7      | T_ID . '=' T_ID opr T_NUMBER
    8      | T_ID . '=' T_NUMBER opr T_NUMBER
   12      | T_ID . ':'
   15      | T_ID . '=' T_ID '[' T_ID ']'
   16      | T_ID . '[' T_ID ']' '=' T_ID

    '='  shift, and go to state 8
    ':'  shift, and go to state 9
    '['  shift, and go to state 10


state 4

    9 start: T_GOTO . T_ID
   10      | T_GOTO . T_STOP

    T_STOP  shift, and go to state 11
    T_ID    shift, and go to state 12


state 5

   11 start: T_IF . T_ID T_GOTO T_ID

    T_ID  shift, and go to state 13


state 6

    0 $accept: supreme_start . $end

    $end  shift, and go to state 14


state 7

    1 supreme_start: start . supreme_start
    2              | start .

    T_START  shift, and go to state 1
    T_STOP   shift, and go to state 2
    T_ID     shift, and go to state 3
    T_GOTO   shift, and go to state 4
    T_IF     shift, and go to state 5

    $default  reduce using rule 2 (supreme_start)

    supreme_start  go to state 15
    start          go to state 7


state 8

    3 start: T_ID '=' . T_NUMBER
    4      | T_ID '=' . T_ID
    5      | T_ID '=' . T_ID opr T_ID
    6      | T_ID '=' . T_NUMBER opr T_ID
    7      | T_ID '=' . T_ID opr T_NUMBER
    8      | T_ID '=' . T_NUMBER opr T_NUMBER
   15      | T_ID '=' . T_ID '[' T_ID ']'

    T_ID      shift, and go to state 16
    T_NUMBER  shift, and go to state 17


state 9

   12 start: T_ID ':' .

    $default  reduce using rule 12 (start)


state 10

   16 start: T_ID '[' . T_ID ']' '=' T_ID

    T_ID  shift, and go to state 18


state 11

   10 start: T_GOTO T_STOP .

    $default  reduce using rule 10 (start)


state 12

    9 start: T_GOTO T_ID .

    $default  reduce using rule 9 (start)


state 13

   11 start: T_IF T_ID . T_GOTO T_ID

    T_GOTO  shift, and go to state 19


state 14

    0 $accept: supreme_start $end .

    $default  accept


state 15

    1 supreme_start: start supreme_start .

    $default  reduce using rule 1 (supreme_start)


state 16

    4 start: T_ID '=' T_ID .
    5      | T_ID '=' T_ID . opr T_ID
    7      | T_ID '=' T_ID . opr T_NUMBER
   15      | T_ID '=' T_ID . '[' T_ID ']'

    T_LE_OP   shift, and go to state 20
    T_GE_OP   shift, and go to state 21
    T_MOD_OP  shift, and go to state 22
    T_EQ_OP   shift, and go to state 23
    T_NE_OP   shift, and go to state 24
    T_OR_OP   shift, and go to state 25
    T_AND_OP  shift, and go to state 26
    '['       shift, and go to state 27
    '+'       shift, and go to state 28
    '-'       shift, and go to state 29
    '*'       shift, and go to state 30
    '/'       shift, and go to state 31
    '<'       shift, and go to state 32
    '>'       shift, and go to state 33

    $default  reduce using rule 4 (start)

    opr  go to state 34


state 17

    3 start: T_ID '=' T_NUMBER .
    6      | T_ID '=' T_NUMBER . opr T_ID
    8      | T_ID '=' T_NUMBER . opr T_NUMBER

    T_LE_OP   shift, and go to state 20
    T_GE_OP   shift, and go to state 21
    T_MOD_OP  shift, and go to state 22
    T_EQ_OP   shift, and go to state 23
    T_NE_OP   shift, and go to state 24
    T_OR_OP   shift, and go to state 25
    T_AND_OP  shift, and go to state 26
    '+'       shift, and go to state 28
    '-'       shift, and go to state 29
    '*'       shift, and go to state 30
    '/'       shift, and go to state 31
    '<'       shift, and go to state 32
    '>'       shift, and go to state 33

    $default  reduce using rule 3 (start)

    opr  go to state 35


state 18

   16 start: T_ID '[' T_ID . ']' '=' T_ID

    ']'  shift, and go to state 36


state 19

   11 start: T_IF T_ID T_GOTO . T_ID

    T_ID  shift, and go to state 37


state 20

   23 opr: T_LE_OP .

    $default  reduce using rule 23 (opr)


state 21

   24 opr: T_GE_OP .

    $default  reduce using rule 24 (opr)


state 22

   25 opr: T_MOD_OP .

    $default  reduce using rule 25 (opr)


state 23

   26 opr: T_EQ_OP .

    $default  reduce using rule 26 (opr)


state 24

   27 opr: T_NE_OP .

    $default  reduce using rule 27 (opr)


state 25

   28 opr: T_OR_OP .

    $default  reduce using rule 28 (opr)


state 26

   29 opr: T_AND_OP .

    $default  reduce using rule 29 (opr)


state 27

   15 start: T_ID '=' T_ID '[' . T_ID ']'

    T_ID  shift, and go to state 38


state 28

   17 opr: '+' .

    $default  reduce using rule 17 (opr)


state 29

   18 opr: '-' .

    $default  reduce using rule 18 (opr)


state 30

   19 opr: '*' .

    $default  reduce using rule 19 (opr)


state 31

   20 opr: '/' .

    $default  reduce using rule 20 (opr)


state 32

   21 opr: '<' .

    $default  reduce using rule 21 (opr)


state 33

   22 opr: '>' .

    $default  reduce using rule 22 (opr)


state 34

    5 start: T_ID '=' T_ID opr . T_ID
    7      | T_ID '=' T_ID opr . T_NUMBER

    T_ID      shift, and go to state 39
    T_NUMBER  shift, and go to state 40


state 35

    6 start: T_ID '=' T_NUMBER opr . T_ID
    8      | T_ID '=' T_NUMBER opr . T_NUMBER

    T_ID      shift, and go to state 41
    T_NUMBER  shift, and go to state 42


state 36

   16 start: T_ID '[' T_ID ']' . '=' T_ID

    '='  shift, and go to state 43


state 37

   11 start: T_IF T_ID T_GOTO T_ID .

    $default  reduce using rule 11 (start)


state 38

   15 start: T_ID '=' T_ID '[' T_ID . ']'

    ']'  shift, and go to state 44


state 39

    5 start: T_ID '=' T_ID opr T_ID .

    $default  reduce using rule 5 (start)


state 40

    7 start: T_ID '=' T_ID opr T_NUMBER .

    $default  reduce using rule 7 (start)


state 41

    6 start: T_ID '=' T_NUMBER opr T_ID .

    $default  reduce using rule 6 (start)


state 42

    8 start: T_ID '=' T_NUMBER opr T_NUMBER .

    $default  reduce using rule 8 (start)


state 43

   16 start: T_ID '[' T_ID ']' '=' . T_ID

    T_ID  shift, and go to state 45


state 44

   15 start: T_ID '=' T_ID '[' T_ID ']' .

    $default  reduce using rule 15 (start)


state 45

   16 start: T_ID '[' T_ID ']' '=' T_ID .

    $default  reduce using rule 16 (start)
